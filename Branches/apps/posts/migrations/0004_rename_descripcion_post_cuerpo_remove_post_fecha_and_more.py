# Generated by Django 4.0 on 2021-12-16 13:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('usuarios', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('posts', '0003_post_usuario_alter_post_descripcion'),
    ]

    operations = [
        migrations.RenameField(
            model_name='post',
            old_name='descripcion',
            new_name='cuerpo',
        ),
        migrations.RemoveField(
            model_name='post',
            name='fecha',
        ),
        migrations.RemoveField(
            model_name='post',
            name='titulo',
        ),
        migrations.RemoveField(
            model_name='post',
            name='usuario',
        ),
        migrations.AddField(
            model_name='post',
            name='autor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='autor_post', to='usuarios.usuario'),
        ),
        migrations.AddField(
            model_name='post',
            name='fecha_creacion',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='post',
            name='likes',
            field=models.ManyToManyField(blank=True, related_name='likes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterModelTable(
            name='post',
            table=None,
        ),
        migrations.CreateModel(
            name='Comentario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comentario', models.TextField()),
                ('fecha_creacion', models.DateTimeField(default=django.utils.timezone.now)),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_post', to='usuarios.usuario')),
                ('likes', models.ManyToManyField(blank=True, related_name='comment_likes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
